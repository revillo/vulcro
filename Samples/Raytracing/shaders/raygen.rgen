#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

layout (set = 0, binding = 0) uniform accelerationStructureNV RayScene;
layout (set = 1, binding = 0, rgba8) uniform image2D RayImage;

#include "common.h"
layout(location = RAY_LOCATION) rayPayloadNV RayPayload PrimaryRay;

void main() {

    PrimaryRay.color = vec4(1.0, 0.0, 0.0, 1.0);
  
    vec3 origin = vec3(0.0, 0.0, -3.0);
    
    vec2 uv = gl_LaunchIDNV.xy / vec2(511.0, 511.0);
    
    vec3 direction = normalize(vec3(uv - vec2(0.5), 1.0));
    
    const uint rayFlags = gl_RayFlagsOpaqueNV;
    const uint cullMask = 0xFF;
    
    float tmin = 0.0;
    float tmax = 10.0;
      
      
    traceNV(
       RayScene,
       rayFlags,
       cullMask,
       0,//record offset
       1,//record stride
       0,//miss index
       origin,
       tmin,
       direction,
       tmax,
        RAY_LOCATION);
    
    
    imageStore(RayImage, ivec2(gl_LaunchIDNV.xy), PrimaryRay.color);
    //imageStore(RayImage, ivec2(gl_LaunchIDNV.xy), vec4(uv, 1.0, 1.0));

}